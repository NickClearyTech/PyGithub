from typing import Any, Dict
from datetime import datetime

import github.GithubObject
import github.PaginatedList
import github.CodeScanRule
import github.CodeScanTool
import github.CodeScanAlertInstance


class CodeScanAlert(github.GithubObject.NonCompletableGithubObject):
    def __repr__(self) -> str: ...
    @property
    def number(self) -> int: ...
    @property
    def rule(self) -> github.CodeScanRule.CodeScanRule: ...
    @property
    def tool(self) -> github.CodeScanTool.CodeScanTool: ...
    @property
    def created_at(self) -> datetime: ...
    @property
    def dismissed_at(self) -> datetime: ...
    @property
    def dismissed_by(self) -> dict: ...
    @property
    def dismissed_reason(self) -> str:
    @property
    def url(self) -> str: ...
    @property
    def html_url(self) -> str: ...
    @property
    def instances_url(self) -> str: ...
    @property
    def most_recent_instance(self) -> github.CodeScanAlertInstance.CodeScanAlertInstance: ...
    @property
    def state(self) -> str: ...

    def get_instances(self) -> github.PaginatedList.PaginatedList: ...

    def _initAttributes(self) -> None: ...
    def _useAttributes(self, attributes: Dict[str, Any]) -> None: ...
